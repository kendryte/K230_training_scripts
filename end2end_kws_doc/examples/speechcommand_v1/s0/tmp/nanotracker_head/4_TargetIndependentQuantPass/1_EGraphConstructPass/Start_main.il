%main = fn(%input: f32[1,30,40], %cache: f32[1,256,105]): // (f32[1,30,40], f32[1,256,105]) -> (f32[1,30,2], f32[1,256,105])
{
  %0 = RangeOf(const(f32[2,1,1] : {{{-0.046259888f}},{{-0.14146039f}}})): // f32[2]
  %1 = const(f32[2,1,1] : {{{-0.046259888f}},{{-0.14146039f}}})@(RangeOf = %0): // f32[2,1,1]
  %2 = Slice(%cache, const(i64[1] : {49L}), const(i64[1] : {105L}), const(i64[1] : {2L}), const(i64[1] : {1L})): // f32[1,256,56]
  %3 = Slice(%cache, const(i64[1] : {21L}), const(i64[1] : {49L}), const(i64[1] : {2L}), const(i64[1] : {1L})): // f32[1,256,28]
  %4 = Slice(%cache, const(i64[1] : {7L}), const(i64[1] : {21L}), const(i64[1] : {2L}), const(i64[1] : {1L})): // f32[1,256,14]
  %5 = Slice(%cache, const(i64[1] : {0L}), const(i64[1] : {7L}), const(i64[1] : {2L}), const(i64[1] : {1L})): // f32[1,256,7]
  %6 = RangeOf(const(f32[256,1,1])): // f32[2]
  %7 = const(f32[256,1,1])@(RangeOf = %6): // f32[256,1,1]
  %8 = Reshape(%input, const(i32[4] : {30,40,1,1})): // f32[30,40,1,1]
  %9 = RangeOf(%8): // f32[2]
  %10 = %8@(RangeOf = %9): // f32[30,40,1,1]
  %11 = RangeOf(const(f32[256,40,1,1])): // f32[2]
  %12 = const(f32[256,40,1,1])@(RangeOf = %11): // f32[256,40,1,1]
  %13 = Conv2D(PadMode.Constant, %10, %12, const(f32[256]), const(i32[2] : {1,1}), const(i32[2,2] : {{0,0},{0,0}}), const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-Infinityf,Infinityf})): // f32[30,256,1,1]
  %14 = RangeOf(%13): // f32[2]
  %15 = %13@(RangeOf = %14): // f32[30,256,1,1]
  %16 = Add(BinaryOp.Add, %7, %15): // f32[30,256,1,1]
  %17 = RangeOf(%16): // f32[2]
  %18 = %16@(RangeOf = %17): // f32[30,256,1,1]
  %19 = Relu(%18): // f32[30,256,1,1]
  %20 = RangeOf(%19): // f32[2]
  %21 = %19@(RangeOf = %20): // f32[30,256,1,1]
  %22 = Reshape(%21, const(i32[3] : {1,30,256})): // f32[1,30,256]
  %23 = RangeOf(%22): // f32[2]
  %24 = %22@(RangeOf = %23): // f32[1,30,256]
  %25 = Transpose(%24, const(i64[3] : {0L,2L,1L})): // f32[1,256,30]
  %26 = RangeOf(%25): // f32[2]
  %27 = %25@(RangeOf = %26): // f32[1,256,30]
  %28 = (%5, %27): // (f32[1,256,7], f32[1,256,30])
  
  %29 = Concat(%28, const(i64 : 2)): // f32[1,256,37]
  %30 = Reshape(%29, const(i32[4] : {1,256,37,1})): // f32[1,256,37,1]
  %31 = RangeOf(%30): // f32[2]
  %32 = %30@(RangeOf = %31): // f32[1,256,37,1]
  %33 = RangeOf(const(f32[256,1,8,1])): // f32[2]
  %34 = const(f32[256,1,8,1])@(RangeOf = %33): // f32[256,1,8,1]
  %35 = Conv2D(PadMode.Constant, %32, %34, const(f32[256]), const(i64[2] : {1L,1L}), const(i64[2,2] : {{0L,0L},{0L,0L}}), const(i64[2] : {1L,1L}), const(i64 : 256), const(f32[2] : {0f,Infinityf})): // f32[1,256,30,1]
  %36 = RangeOf(%35): // f32[2]
  %37 = %35@(RangeOf = %36): // f32[1,256,30,1]
  %38 = RangeOf(const(f32[256,256,1,1])): // f32[2]
  %39 = const(f32[256,256,1,1])@(RangeOf = %38): // f32[256,256,1,1]
  %40 = Conv2D(PadMode.Constant, %37, %39, const(f32[256]), const(i64[2] : {1L,1L}), const(i64[2,2] : {{0L,0L},{0L,0L}}), const(i64[2] : {1L,1L}), const(i64 : 1), const(f32[2] : {0f,Infinityf})): // f32[1,256,30,1]
  %41 = RangeOf(%40): // f32[2]
  %42 = %40@(RangeOf = %41): // f32[1,256,30,1]
  %43 = Reshape(%42, const(i32[3] : {1,256,30})): // f32[1,256,30]
  %44 = RangeOf(%43): // f32[2]
  %45 = %43@(RangeOf = %44): // f32[1,256,30]
  %46 = Add(BinaryOp.Add, %45, %27): // f32[1,256,30]
  %47 = RangeOf(%46): // f32[2]
  %48 = %46@(RangeOf = %47): // f32[1,256,30]
  %49 = (%4, %48): // (f32[1,256,14], f32[1,256,30])
  
  %50 = Concat(%49, const(i64 : 2)): // f32[1,256,44]
  %51 = Reshape(%50, const(i32[4] : {1,256,44,1})): // f32[1,256,44,1]
  %52 = RangeOf(%51): // f32[2]
  %53 = %51@(RangeOf = %52): // f32[1,256,44,1]
  %54 = RangeOf(const(f32[256,1,8,1])): // f32[2]
  %55 = const(f32[256,1,8,1])@(RangeOf = %54): // f32[256,1,8,1]
  %56 = Conv2D(PadMode.Constant, %53, %55, const(f32[256]), const(i64[2] : {1L,1L}), const(i64[2,2] : {{0L,0L},{0L,0L}}), const(i64[2] : {2L,1L}), const(i64 : 256), const(f32[2] : {0f,Infinityf})): // f32[1,256,30,1]
  %57 = RangeOf(%56): // f32[2]
  %58 = %56@(RangeOf = %57): // f32[1,256,30,1]
  %59 = RangeOf(const(f32[256,256,1,1])): // f32[2]
  %60 = const(f32[256,256,1,1])@(RangeOf = %59): // f32[256,256,1,1]
  %61 = Conv2D(PadMode.Constant, %58, %60, const(f32[256]), const(i64[2] : {1L,1L}), const(i64[2,2] : {{0L,0L},{0L,0L}}), const(i64[2] : {1L,1L}), const(i64 : 1), const(f32[2] : {0f,Infinityf})): // f32[1,256,30,1]
  %62 = RangeOf(%61): // f32[2]
  %63 = %61@(RangeOf = %62): // f32[1,256,30,1]
  %64 = Reshape(%63, const(i32[3] : {1,256,30})): // f32[1,256,30]
  %65 = RangeOf(%64): // f32[2]
  %66 = %64@(RangeOf = %65): // f32[1,256,30]
  %67 = Add(BinaryOp.Add, %66, %48): // f32[1,256,30]
  %68 = RangeOf(%67): // f32[2]
  %69 = %67@(RangeOf = %68): // f32[1,256,30]
  %70 = (%3, %69): // (f32[1,256,28], f32[1,256,30])
  
  %71 = Concat(%70, const(i64 : 2)): // f32[1,256,58]
  %72 = Reshape(%71, const(i32[4] : {1,256,58,1})): // f32[1,256,58,1]
  %73 = RangeOf(%72): // f32[2]
  %74 = %72@(RangeOf = %73): // f32[1,256,58,1]
  %75 = RangeOf(const(f32[256,1,8,1])): // f32[2]
  %76 = const(f32[256,1,8,1])@(RangeOf = %75): // f32[256,1,8,1]
  %77 = Conv2D(PadMode.Constant, %74, %76, const(f32[256]), const(i64[2] : {1L,1L}), const(i64[2,2] : {{0L,0L},{0L,0L}}), const(i64[2] : {4L,1L}), const(i64 : 256), const(f32[2] : {0f,Infinityf})): // f32[1,256,30,1]
  %78 = RangeOf(%77): // f32[2]
  %79 = %77@(RangeOf = %78): // f32[1,256,30,1]
  %80 = RangeOf(const(f32[256,256,1,1])): // f32[2]
  %81 = const(f32[256,256,1,1])@(RangeOf = %80): // f32[256,256,1,1]
  %82 = Conv2D(PadMode.Constant, %79, %81, const(f32[256]), const(i64[2] : {1L,1L}), const(i64[2,2] : {{0L,0L},{0L,0L}}), const(i64[2] : {1L,1L}), const(i64 : 1), const(f32[2] : {0f,Infinityf})): // f32[1,256,30,1]
  %83 = RangeOf(%82): // f32[2]
  %84 = %82@(RangeOf = %83): // f32[1,256,30,1]
  %85 = Reshape(%84, const(i32[3] : {1,256,30})): // f32[1,256,30]
  %86 = RangeOf(%85): // f32[2]
  %87 = %85@(RangeOf = %86): // f32[1,256,30]
  %88 = Add(BinaryOp.Add, %87, %69): // f32[1,256,30]
  %89 = RangeOf(%88): // f32[2]
  %90 = %88@(RangeOf = %89): // f32[1,256,30]
  %91 = (%2, %90): // (f32[1,256,56], f32[1,256,30])
  
  %92 = Concat(%91, const(i64 : 2)): // f32[1,256,86]
  %93 = Reshape(%92, const(i32[4] : {1,256,86,1})): // f32[1,256,86,1]
  %94 = RangeOf(%93): // f32[2]
  %95 = %93@(RangeOf = %94): // f32[1,256,86,1]
  %96 = RangeOf(const(f32[256,1,8,1])): // f32[2]
  %97 = const(f32[256,1,8,1])@(RangeOf = %96): // f32[256,1,8,1]
  %98 = Conv2D(PadMode.Constant, %95, %97, const(f32[256]), const(i64[2] : {1L,1L}), const(i64[2,2] : {{0L,0L},{0L,0L}}), const(i64[2] : {8L,1L}), const(i64 : 256), const(f32[2] : {0f,Infinityf})): // f32[1,256,30,1]
  %99 = RangeOf(%98): // f32[2]
  %100 = %98@(RangeOf = %99): // f32[1,256,30,1]
  %101 = RangeOf(const(f32[256,256,1,1])): // f32[2]
  %102 = const(f32[256,256,1,1])@(RangeOf = %101): // f32[256,256,1,1]
  %103 = Conv2D(PadMode.Constant, %100, %102, const(f32[256]), const(i64[2] : {1L,1L}), const(i64[2,2] : {{0L,0L},{0L,0L}}), const(i64[2] : {1L,1L}), const(i64 : 1), const(f32[2] : {0f,Infinityf})): // f32[1,256,30,1]
  %104 = RangeOf(%103): // f32[2]
  %105 = %103@(RangeOf = %104): // f32[1,256,30,1]
  %106 = Reshape(%105, const(i32[3] : {1,256,30})): // f32[1,256,30]
  %107 = RangeOf(%106): // f32[2]
  %108 = %106@(RangeOf = %107): // f32[1,256,30]
  %109 = Add(BinaryOp.Add, %108, %90): // f32[1,256,30]
  %110 = RangeOf(%109): // f32[2]
  %111 = %109@(RangeOf = %110): // f32[1,256,30]
  %112 = Transpose(%111, const(i64[3] : {0L,2L,1L})): // f32[1,30,256]
  %113 = RangeOf(%112): // f32[2]
  %114 = %112@(RangeOf = %113): // f32[1,30,256]
  %115 = Reshape(%114, const(i32[4] : {30,256,1,1})): // f32[30,256,1,1]
  %116 = RangeOf(%115): // f32[2]
  %117 = %115@(RangeOf = %116): // f32[30,256,1,1]
  %118 = RangeOf(const(f32[2,256,1,1])): // f32[2]
  %119 = const(f32[2,256,1,1])@(RangeOf = %118): // f32[2,256,1,1]
  %120 = Conv2D(PadMode.Constant, %117, %119, const(f32[2] : {0f,0f}), const(i32[2] : {1,1}), const(i32[2,2] : {{0,0},{0,0}}), const(i32[2] : {1,1}), const(i32 : 1), const(f32[2] : {-Infinityf,Infinityf})): // f32[30,2,1,1]
  %121 = RangeOf(%120): // f32[2]
  %122 = %120@(RangeOf = %121): // f32[30,2,1,1]
  %123 = Add(BinaryOp.Add, %1, %122): // f32[30,2,1,1]
  %124 = RangeOf(%123): // f32[2]
  %125 = %123@(RangeOf = %124): // f32[30,2,1,1]
  %126 = Sigmoid(%125): // f32[30,2,1,1]
  %127 = RangeOf(%126): // f32[2]
  %128 = %126@(RangeOf = %127): // f32[30,2,1,1]
  %129 = Reshape(%128, const(i32[3] : {1,30,2})): // f32[1,30,2]
  %130 = Slice(%29, const(i64[1] : {-7L}), const(i64[1] : {9223372036854775807L}), const(i64[1] : {2L}), const(i64[1] : {1L})): // f32[1,256,7]
  %131 = Slice(%50, const(i64[1] : {-14L}), const(i64[1] : {9223372036854775807L}), const(i64[1] : {2L}), const(i64[1] : {1L})): // f32[1,256,14]
  %132 = Slice(%71, const(i64[1] : {-28L}), const(i64[1] : {9223372036854775807L}), const(i64[1] : {2L}), const(i64[1] : {1L})): // f32[1,256,28]
  %133 = Slice(%92, const(i64[1] : {-56L}), const(i64[1] : {9223372036854775807L}), const(i64[1] : {2L}), const(i64[1] : {1L})): // f32[1,256,56]
  %134 = (%130, %131, %132, %133): // (f32[1,256,7], f32[1,256,14], f32[1,256,28], f32[1,256,56])
  
  %135 = Concat(%134, const(i64 : 2)): // f32[1,256,105]
  %136 = (%129, %135): // (f32[1,30,2], f32[1,256,105])
  
}
