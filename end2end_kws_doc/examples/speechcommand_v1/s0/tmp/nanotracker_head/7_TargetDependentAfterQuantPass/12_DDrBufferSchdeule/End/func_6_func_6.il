%func_6 = prim_wrapper(f32[1,1,30,256]): // (f32[1,1,30,256]) -> f32[1,1,256,30] {
  T.PrimFunc("TileLayerGroup_15", T.Buffer(ddrIf, Input, f32)@(0, 30720), T.Buffer(ddrOf, Output, f32)@(0, 30720)).Body( // (f32[1,1,30,256], f32[1,1,256,30]) -> ()
    I.LoadImm(rd: x1, value: 16)
    I.MMU_CONF(rstart: x0, rdepth: x1, mmu_id: 0)
    I.LoadImm(rd: x2, value: 1024)
    I.MMU_CONF(rstart: x1, rdepth: x2, mmu_id: 1)
    I.LoadImm(rd: x3, value: 1040)
    I.LoadImm(rd: x4, value: 1)
    I.MMU_CONF(rstart: x3, rdepth: x4, mmu_id: 2)
    I.LoadImm(rd: x5, value: 1041)
    I.MMU_CONF(rstart: x5, rdepth: x4, mmu_id: 3)
    I.LoadImm(rd: x6, value: 7680)
    I.SS_PACK_STRIDE(rn: x4, rc: x4, rh: x6, rss: ss0)
    I.SS_PACK_STRIDE(rn: x4, rc: x4, rh: x6, rss: ss1)
    I.L2_LOAD_CONF(rstride_d: ss1, rstride_s: ss0, l2_datatype: fp16, ddr_datatype: fp32)
    I.SS_PACK_SHAPE(rn: x4, rc: x4, rh: x4, rw: x6, rss: ss2)
    I.CCR_DECL(rnum: x4)
    I.CCR_SET(ccr: 0, value: 1)
    I.LoadDdrAddr(rd_basement: x9, value: BufferIndexOf(ddrIf); rd_offset: x7, value: 0)
    I.LoadImm(rd: x8, value: 268435456)
    I.L2_LOAD(raddr_d: x8, raddr_s: x7, rshape: ss2)
    I.LoadImm(rd: x10, value: 30)
    I.LoadImm(rd: x11, value: 256)
    I.SS_PACK_STRIDE(rn: x4, rc: x10, rh: x11, rss: ss3)
    I.LoadImm(rd: x12, value: 32)
    I.SS_PACK_STRIDE(rn: x4, rc: x11, rh: x12, rss: ss4)
    I.MFU_TRANSPOSE_CONF(rstride_d: ss4, rstride_s: ss3, l2_datatype: fp16, permute: NCWH, funct5: transpose_conf)
    I.SS_PACK_SHAPE(rn: x4, rc: x4, rh: x10, rw: x11, rss: ss5)
    I.LoadImm(rd: x14, value: 2)
    I.CCR_DECL(rnum: x14)
    I.CCR_CLR(ccr: 0)
    I.CCR_SET(ccr: 1, value: 1)
    I.LoadImm(rd: x13, value: 268451840)
    I.MFU_TRANSPOSE(raddr_d: x13, raddr_s: x8, rshape: ss5)
    I.SS_PACK_STRIDE(rn: x4, rc: x11, rh: x12, rss: ss4)
    I.SS_PACK_STRIDE(rn: x4, rc: x11, rh: x10, rss: ss6)
    I.L2_STORE_CONF(rstride_d: ss6, rstride_s: ss4, l2_datatype: fp16, ddr_datatype: fp32)
    I.SS_PACK_SHAPE(rn: x4, rc: x4, rh: x11, rw: x10, rss: ss7)
    I.CCR_DECL(rnum: x4)
    I.CCR_CLR(ccr: 1)
    I.LoadDdrAddr(rd_basement: x16, value: BufferIndexOf(ddrOf); rd_offset: x15, value: 0)
    I.L2_STORE(raddr_d: x15, raddr_s: x13, rshape: ss7)
    I.END(rs: x0)
  )
  
}
