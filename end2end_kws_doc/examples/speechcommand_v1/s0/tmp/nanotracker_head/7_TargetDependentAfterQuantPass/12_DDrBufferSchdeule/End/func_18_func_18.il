%func_18 = prim_wrapper(u8[1,1,256,30], f32[1,1,256,30]): // (u8[1,1,256,30], f32[1,1,256,30]) -> u8[30,256,1,1] {
  T.PrimFunc("TileLayerGroup_1", T.Buffer(ddrIf2, Input, u8)@(0, 7680), T.Buffer(ddrIf, Input, f32)@(7680, 30720), T.Buffer(ddrOf, Output, u8)@(0, 7680)).Body( // (u8[1,1,256,30], f32[1,1,256,30], u8[30,256,1,1]) -> ()
    I.LoadImm(rd: x1, value: 16)
    I.MMU_CONF(rstart: x0, rdepth: x1, mmu_id: 0)
    I.LoadImm(rd: x2, value: 960)
    I.MMU_CONF(rstart: x1, rdepth: x2, mmu_id: 1)
    I.LoadImm(rd: x3, value: 976)
    I.LoadImm(rd: x4, value: 240)
    I.MMU_CONF(rstart: x3, rdepth: x4, mmu_id: 2)
    I.LoadImm(rd: x5, value: 1216)
    I.LoadImm(rd: x6, value: 2)
    I.MMU_CONF(rstart: x5, rdepth: x6, mmu_id: 3)
    I.LoadImm(rd: x7, value: 1218)
    I.LoadImm(rd: x8, value: 1)
    I.MMU_CONF(rstart: x7, rdepth: x8, mmu_id: 4)
    I.LoadImm(rd: x9, value: 1219)
    I.MMU_CONF(rstart: x9, rdepth: x8, mmu_id: 5)
    I.LoadImm(rd: x10, value: 7680)
    I.SS_PACK_STRIDE(rn: x8, rc: x8, rh: x10, rss: ss0)
    I.SS_PACK_STRIDE(rn: x8, rc: x8, rh: x10, rss: ss1)
    I.L2_LOAD_CONF(rstride_d: ss1, rstride_s: ss0, l2_datatype: fp16, ddr_datatype: fp32)
    I.SS_PACK_SHAPE(rn: x8, rc: x8, rh: x8, rw: x10, rss: ss2)
    I.CCR_DECL(rnum: x8)
    I.CCR_SET(ccr: 0, value: 1)
    I.LoadDdrAddr(rd_basement: x13, value: BufferIndexOf(ddrIf); rd_offset: x11, value: 0)
    I.LoadImm(rd: x12, value: 268435456)
    I.L2_LOAD(raddr_d: x12, raddr_s: x11, rshape: ss2)
    I.LoadImm(rd: x14, value: 7)
    I.L2_LOAD_W_CONF(rlen_compressed: x14, rlen_decompressed: x14, l2_datatype: fp16, ddr_datatype: fp16, enable_decompress: False)
    I.CCR_DECL(rnum: x8)
    I.CCR_SET(ccr: 1, value: 1)
    I.LoadDdrAddr(rd_basement: x17, value: BufferIndexOf(T.Buffer(ddrAct1, Rdata, f16)@(640, 14)); rd_offset: x15, value: (DDrOf(ddrAct1) + 0))
    I.LoadImm(rd: x16, value: 805306400)
    I.LoadImm(rd: x18, value: 23)
    I.L2_LOAD_W(raddr_d: x16, raddr_s: x15, rvalid_c_num: x18)
    I.LoadImm(rd: x19, value: 256)
    I.LoadImm(rd: x20, value: 30)
    I.SS_PACK_STRIDE(rn: x8, rc: x19, rh: x20, rss: ss3)
    I.SS_PACK_STRIDE(rn: x0, rc: x0, rh: x0, rss: ss4)
    I.SS_PACK_STRIDE(rn: x8, rc: x19, rh: x20, rss: ss3)
    I.MFU_ACT1_CONF_STRIDE(rstride_s1: ss3, rstride_s2: ss4, rstride_d1: ss3, funct5: act1_conf_stride)
    I.MFU_ACT1_CONF_SRC1(rslice: x10, rright_repeats: x8, rslice_repeats: x8, sid: 0, slice_loc: l2, funct5: act1_conf_src1)
    I.SS_PACK_SHAPE(rn: x8, rc: x8, rh: x19, rw: x20, rss: ss5)
    I.MFU_ACT1_CONF_SRC2(rleft_repeats: x8, rshape: ss5, sid: 0, source_type: l2, funct5: act1_conf_src2)
    I.MFU_ACT1_CONF_SRC1(rslice: x8, rright_repeats: x8, rslice_repeats: x8, sid: 1, slice_loc: l2, funct5: act1_conf_src1)
    I.SS_PACK_SHAPE(rn: x0, rc: x0, rh: x0, rw: x0, rss: ss4)
    I.MFU_ACT1_CONF_SRC2(rleft_repeats: x8, rshape: ss4, sid: 1, source_type: l2, funct5: act1_conf_src2)
    I.SS_PACK_SHAPE(rn: x8, rc: x8, rh: x19, rw: x20, rss: ss5)
    I.MFU_ACT1_CONF_DEST(rlen: x10, rshape: ss5, funct5: act1_conf_dest)
    I.LoadImm(rd: x21, value: 15360)
    I.MFU_ACT1_CONF_DEQ(rscale: x21, rbias: x0, quant_type: disable, sid: 0, funct5: act1_conf_deq, rshift_bits: 0)
    I.MFU_ACT1_CONF_DEQ(rscale: x21, rbias: x0, quant_type: disable, sid: 1, funct5: act1_conf_deq, rshift_bits: 0)
    I.MFU_ACT1_CONF_QUANT(quant_type: u8, funct5: act1_conf_quant, rshift_bits: 0)
    I.MFU_ACT1_CONF(funct4: add, is_by_channel: True, is_16_segments: False, funct5: act1_conf)
    I.LoadImm(rd: x23, value: 3)
    I.CCR_DECL(rnum: x23)
    I.CCR_CLR(ccr: 0)
    I.CCR_CLR(ccr: 1)
    I.CCR_SET(ccr: 2, value: 1)
    I.LoadImm(rd: x22, value: 268450816)
    I.MFU_ACT1_COMPUTE(raddr_d1: x22, raddr_s1: x12, raddr_s2: x0, raddr_arg: x16)
    I.L2_LOAD_W_CONF(rlen_compressed: x14, rlen_decompressed: x14, l2_datatype: fp16, ddr_datatype: fp16, enable_decompress: False)
    I.CCR_DECL(rnum: x8)
    I.CCR_SET(ccr: 1, value: 1)
    I.LoadDdrAddr(rd_basement: x26, value: BufferIndexOf(T.Buffer(ddrAct1, Rdata, f16)@(654, 14)); rd_offset: x24, value: (DDrOf(ddrAct1) + 0))
    I.LoadImm(rd: x25, value: 805306368)
    I.L2_LOAD_W(raddr_d: x25, raddr_s: x24, rvalid_c_num: x18)
    I.SS_PACK_STRIDE(rn: x8, rc: x8, rh: x10, rss: ss1)
    I.SS_PACK_STRIDE(rn: x8, rc: x8, rh: x10, rss: ss6)
    I.L2_LOAD_CONF(rstride_d: ss6, rstride_s: ss1, l2_datatype: i8, ddr_datatype: i8)
    I.SS_PACK_SHAPE(rn: x8, rc: x8, rh: x8, rw: x10, rss: ss2)
    I.CCR_DECL(rnum: x8)
    I.CCR_SET(ccr: 3, value: 1)
    I.LoadDdrAddr(rd_basement: x29, value: BufferIndexOf(ddrIf2); rd_offset: x27, value: 0)
    I.LoadImm(rd: x28, value: 536870912)
    I.L2_LOAD(raddr_d: x28, raddr_s: x27, rshape: ss2)
    I.SS_PACK_STRIDE(rn: x8, rc: x19, rh: x20, rss: ss3)
    I.SS_PACK_STRIDE(rn: x8, rc: x19, rh: x20, rss: ss3)
    I.LoadImm(rd: x30, value: 32)
    I.SS_PACK_STRIDE(rn: x8, rc: x19, rh: x30, rss: ss7)
    I.MFU_ACT1_CONF_STRIDE(rstride_s1: ss3, rstride_s2: ss3, rstride_d1: ss7, funct5: act1_conf_stride)
    I.MFU_ACT1_CONF_SRC1(rslice: x10, rright_repeats: x8, rslice_repeats: x8, sid: 0, slice_loc: l2, funct5: act1_conf_src1)
    I.SS_PACK_SHAPE(rn: x8, rc: x8, rh: x19, rw: x20, rss: ss5)
    I.MFU_ACT1_CONF_SRC2(rleft_repeats: x8, rshape: ss5, sid: 0, source_type: l2, funct5: act1_conf_src2)
    I.MFU_ACT1_CONF_SRC1(rslice: x10, rright_repeats: x8, rslice_repeats: x8, sid: 1, slice_loc: l2, funct5: act1_conf_src1)
    I.SS_PACK_SHAPE(rn: x8, rc: x8, rh: x19, rw: x20, rss: ss5)
    I.MFU_ACT1_CONF_SRC2(rleft_repeats: x8, rshape: ss5, sid: 1, source_type: l2, funct5: act1_conf_src2)
    I.SS_PACK_SHAPE(rn: x8, rc: x8, rh: x19, rw: x20, rss: ss5)
    I.MFU_ACT1_CONF_DEST(rlen: x10, rshape: ss5, funct5: act1_conf_dest)
    I.LoadImm(rd: x31, value: 14605)
    I.MFU_ACT1_CONF_DEQ(rscale: x31, rbias: x0, quant_type: u8, sid: 0, funct5: act1_conf_deq, rshift_bits: 0)
    I.LoadImm(rd: x1, value: 13471)
    I.MFU_ACT1_CONF_DEQ(rscale: x1, rbias: x0, quant_type: u8, sid: 1, funct5: act1_conf_deq, rshift_bits: 0)
    I.MFU_ACT1_CONF_QUANT(quant_type: u8, funct5: act1_conf_quant, rshift_bits: 0)
    I.MFU_ACT1_CONF(funct4: add, is_by_channel: True, is_16_segments: False, funct5: act1_conf)
    I.LoadImm(rd: x2, value: 4)
    I.CCR_DECL(rnum: x2)
    I.CCR_CLR(ccr: 2)
    I.CCR_CLR(ccr: 3)
    I.CCR_CLR(ccr: 1)
    I.CCR_SET(ccr: 0, value: 1)
    I.MFU_ACT1_COMPUTE(raddr_d1: x12, raddr_s1: x22, raddr_s2: x28, raddr_arg: x25)
    I.SS_PACK_STRIDE(rn: x8, rc: x19, rh: x30, rss: ss7)
    I.SS_PACK_STRIDE(rn: x8, rc: x20, rh: x19, rss: ss0)
    I.MFU_TRANSPOSE_CONF(rstride_d: ss0, rstride_s: ss7, l2_datatype: i8, permute: NCWH, funct5: transpose_conf)
    I.SS_PACK_SHAPE(rn: x8, rc: x8, rh: x19, rw: x20, rss: ss5)
    I.CCR_DECL(rnum: x6)
    I.CCR_CLR(ccr: 0)
    I.CCR_SET(ccr: 2, value: 1)
    I.MFU_TRANSPOSE(raddr_d: x22, raddr_s: x12, rshape: ss5)
    I.SS_PACK_STRIDE(rn: x8, rc: x8, rh: x10, rss: ss4)
    I.SS_PACK_STRIDE(rn: x8, rc: x8, rh: x10, rss: ss4)
    I.L2_STORE_CONF(rstride_d: ss4, rstride_s: ss4, l2_datatype: i8, ddr_datatype: i8)
    I.SS_PACK_SHAPE(rn: x8, rc: x8, rh: x8, rw: x10, rss: ss2)
    I.CCR_DECL(rnum: x8)
    I.CCR_CLR(ccr: 2)
    I.LoadDdrAddr(rd_basement: x4, value: BufferIndexOf(ddrOf); rd_offset: x3, value: 0)
    I.L2_STORE(raddr_d: x3, raddr_s: x22, rshape: ss2)
    I.END(rs: x0)
  )
  
}
